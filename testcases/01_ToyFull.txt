%created by ML, v01, 2012-04-16:	creating a new toy example (to be used throughout the paper), depicting each type of relation, and distinguishing between feature/attribute modeling & configuration (1.-4.)
%for Toy Example


=============================== TOP ======================================
%Relationships (1. Feature Model)
MP_AppFeatures: [Communication] [Storage] [ContextInformation] Input Output [Services];
Communication: [TextualCommunication] [VoiceCommunication] [DataCommunication];
TextualCommunication: [SMS];
VoiceCommunication: [Call];
DataCommunication: [InternetAccess];
Input: [TextInput] [AudioInput];
Output: [TextOutput] [GraphicsOutput] [AudioOutput];
%don't I need other relation types?
%check syntax
%cross tree constraints? put them inside here if required


%Attributes	(2. Attribute Model)
InternetAccess.datarate:		Integer[0 to MaxInt], 0, 0;	% [bps]
TextOutput.colorDepth:			Integer[0 to 24], 0, 0;		% [bit] 1..blackWhite

%Q: is there a way to add/model the unit in FaMa? would be valueable for any meaningful output interpretation


%Cross-Tree Constraints:
% none defined for toy example (maybe SMS --> TextInput, TextOutput; Call --> AudioInput, AudioOutput)

=============================== BOTTOM ======================================
%Relationships (1. Feature Model)
MP_PlatformComponents: [Radios] [Memory] Input Output [Processors] [System];
Radios: [Cellular] [NonCellularRadio];
CellularRadio: [GSM] [GPRS] [UMTS];
NonCellularRadio: [WiFi] [BT];
Input: [General] [Sensors];
General: [Keyboard] [Mike];
Output: [Display] [Vibrator] [LED] [Speakers];

%Attributes	(2. Attribute Model)
%MP_PlatformComponents.apiLevel: 1;	% there is no comparable thing as apiLevels here (no continuous platform/middleware upgrades)
GPRS.datarate:		Integer[0 to MaxInt], 0, 0;	% 128 [kbps]
UMTS.datarate:		Integer[0 to MaxInt], 0, 0;	% 2048 [kbps]
HSPA.datarate:		Integer[0 to MaxInt], 0, 0;	% 14400 [kbps]
WiFi.datarate:		Integer[0 to MaxInt], 0, 0;	% 11000 [kbps]

=============================== MAPPING =====================================
%Mapping
%(valid mapping will be ensured by tool-supported mapping selection in future)
%Mapping is not supported yet in FaMA --> will be added

SMS requires GSM or GPRS or UMTS;	% type (3)	(could also be modeled as requires CellularRadio - which looks like type (1), but due to that relation to a parent feature it can effectively be a hidden 1:N relation to leaf features)
Call requires GSM or UMTS;		% type (3)
InternetAccess requires (GPRS or UMTS or HSPA or WiFi) and [bottom.datarate >= top.datarate];	% type (4)
AudioInput requires Mike		% type (1)
TextInput requires (Keyboard or Touch)	% type (3)
TextOutput requires Display and [bottom.colorDepth >= top.colorDepth]	% type (2)
AudioOutput requires Speakers		% type (1)

%open issue: do we also need distinction of model/configuration for Mapping? (for now, could be sufficient to model them once for whole FM; only mappings containing selected features will be applied anyway)


%different types of inter-tree relations:
%(essentially, there are 4 types overall; 1:1, 1:n, and those two combined with a constraint)
	% 1-to-1:
(1)	A requires B		
	% if B is included in bottomLayer, success. else, "single-feature-missing error".
(2)	A requires B with [top.x > bottom.y]
	% if B is included in bottomLayer, and matches the criterion, success. else, "feature-missing error" (with hint which constraint is not met) (maybe distinguish between 'component missing' and 'constraint not met'?)
	% initial formulation: "A conditionally requires B if [top.x > bottom.y]" - however, this sounds like: if constraint is not met, bottomA is not required; is NOT true though...bottomA is always required, but must meet the requirement!
	% variation: how about formulation "A requires B and [top.x > bottom.y]"? advantage: doesn't need any new vocabulary, AND is widely understood. (does it transport correct meaning though?)

	% 1-to-N:
	% (A requires B and C)	
	% not supported for now; is just syntactic sugar; translate it into separate mapping: A requires B, A requires C
(3)	A requires (B or C)		
	% if B or C (or both) included in bottomLayer, success. else (= non included), "group-feature-missing error".
(4)	A requires (B or C) with [top.x > bottom.y]	
	% at least one feature must match the criterion;	if B or C (or both) included in bottomLayer, and (at least one) matches the criterion, success. else, "group-feature-missing error" (with hint which constraint is not met)

order of priority: (2), (1), (4), (3)		% will be relevant for relations with conflicting categories
%david: @jose this won't be included in the first version of the implementation


=============================== CONFIG ======================================
%Relationships (3. Product Configuration)

S={MP_AppFeatures, Communication, Input, Output, TextualCommunication, VoiceCommunication, DataCommunication, SMS, Call, InternetAccess, TextInput, AudioInput, TextOutput, GraphicsOutput, AudioOutput};
R={};
%not necessary to have full configuration; for ease of reading, Unselected features are listed as well (FM = S+R+U):
%U={Storage, ContextInformation, Services}

%Attributes	(4. Attribute Configuration)
%such Attribute Configuration is not supported yet in FaMa (but should be no big deal)
InternetAccess.datarate:		300	% [bps]
TextOutput.colorDepth:			1;	% [bit] 1..blackWhite
%undecided attributes should be possible too probably


===================== OUTPUT ====================================

%Q1 - (required) Platform Capability Question:
	%Output:
		O1.1 - required (1:1):
			Mike; Speakers;
			
		O1.2 - required with constraint (1:1):
			Display and [bottom.colorDepth >= 1];
			
		O1.3 - alternatively required (1:N):
			(GSM or GPRS or UMTS);
			(GSM or UMTS);
			(Keyboard or Touch);
			
		O1.4 - alternatively required with constraint (1:N): 			
			(GPRS or UMTS or HSPA or WiFi) and [bottom.datarate >= 300];
